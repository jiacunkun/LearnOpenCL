
// This file is auto-generated by generate_api_entry.exe. Don't edit it.

// avoid conflicting with other library who loads opencl library as static library.
#define  clGetPlatformIDs  clGetPlatformIDs_noused
#define  clGetPlatformInfo  clGetPlatformInfo_noused
#define  clGetDeviceIDs  clGetDeviceIDs_noused
#define  clGetDeviceInfo  clGetDeviceInfo_noused
#define  clCreateSubDevices  clCreateSubDevices_noused
#define  clRetainDevice  clRetainDevice_noused
#define  clReleaseDevice  clReleaseDevice_noused
#define  clSetDefaultDeviceCommandQueue  clSetDefaultDeviceCommandQueue_noused
#define  clGetDeviceAndHostTimer  clGetDeviceAndHostTimer_noused
#define  clGetHostTimer  clGetHostTimer_noused
#define  clCreateContext  clCreateContext_noused
#define  clCreateContextFromType  clCreateContextFromType_noused
#define  clRetainContext  clRetainContext_noused
#define  clReleaseContext  clReleaseContext_noused
#define  clGetContextInfo  clGetContextInfo_noused
#define  clCreateCommandQueueWithProperties  clCreateCommandQueueWithProperties_noused
#define  clRetainCommandQueue  clRetainCommandQueue_noused
#define  clReleaseCommandQueue  clReleaseCommandQueue_noused
#define  clGetCommandQueueInfo  clGetCommandQueueInfo_noused
#define  clCreateBuffer  clCreateBuffer_noused
#define  clCreateSubBuffer  clCreateSubBuffer_noused
#define  clCreateImage  clCreateImage_noused
#define  clCreatePipe  clCreatePipe_noused
#define  clRetainMemObject  clRetainMemObject_noused
#define  clReleaseMemObject  clReleaseMemObject_noused
#define  clGetSupportedImageFormats  clGetSupportedImageFormats_noused
#define  clGetMemObjectInfo  clGetMemObjectInfo_noused
#define  clGetImageInfo  clGetImageInfo_noused
#define  clGetPipeInfo  clGetPipeInfo_noused
#define  clSetMemObjectDestructorCallback  clSetMemObjectDestructorCallback_noused
#define  clSVMAlloc  clSVMAlloc_noused
#define  clSVMFree  clSVMFree_noused
#define  clCreateSamplerWithProperties  clCreateSamplerWithProperties_noused
#define  clRetainSampler  clRetainSampler_noused
#define  clReleaseSampler  clReleaseSampler_noused
#define  clGetSamplerInfo  clGetSamplerInfo_noused
#define  clCreateProgramWithSource  clCreateProgramWithSource_noused
#define  clCreateProgramWithBinary  clCreateProgramWithBinary_noused
#define  clCreateProgramWithBuiltInKernels  clCreateProgramWithBuiltInKernels_noused
#define  clCreateProgramWithIL  clCreateProgramWithIL_noused
#define  clRetainProgram  clRetainProgram_noused
#define  clReleaseProgram  clReleaseProgram_noused
#define  clBuildProgram  clBuildProgram_noused
#define  clCompileProgram  clCompileProgram_noused
#define  clLinkProgram  clLinkProgram_noused
#define  clUnloadPlatformCompiler  clUnloadPlatformCompiler_noused
#define  clGetProgramInfo  clGetProgramInfo_noused
#define  clGetProgramBuildInfo  clGetProgramBuildInfo_noused
#define  clCreateKernel  clCreateKernel_noused
#define  clCreateKernelsInProgram  clCreateKernelsInProgram_noused
#define  clCloneKernel  clCloneKernel_noused
#define  clRetainKernel  clRetainKernel_noused
#define  clReleaseKernel  clReleaseKernel_noused
#define  clSetKernelArg  clSetKernelArg_noused
#define  clSetKernelArgSVMPointer  clSetKernelArgSVMPointer_noused
#define  clSetKernelExecInfo  clSetKernelExecInfo_noused
#define  clGetKernelInfo  clGetKernelInfo_noused
#define  clGetKernelArgInfo  clGetKernelArgInfo_noused
#define  clGetKernelWorkGroupInfo  clGetKernelWorkGroupInfo_noused
#define  clGetKernelSubGroupInfo  clGetKernelSubGroupInfo_noused
#define  clWaitForEvents  clWaitForEvents_noused
#define  clGetEventInfo  clGetEventInfo_noused
#define  clCreateUserEvent  clCreateUserEvent_noused
#define  clRetainEvent  clRetainEvent_noused
#define  clReleaseEvent  clReleaseEvent_noused
#define  clSetUserEventStatus  clSetUserEventStatus_noused
#define  clSetEventCallback  clSetEventCallback_noused
#define  clGetEventProfilingInfo  clGetEventProfilingInfo_noused
#define  clFlush  clFlush_noused
#define  clFinish  clFinish_noused
#define  clEnqueueReadBuffer  clEnqueueReadBuffer_noused
#define  clEnqueueReadBufferRect  clEnqueueReadBufferRect_noused
#define  clEnqueueWriteBuffer  clEnqueueWriteBuffer_noused
#define  clEnqueueWriteBufferRect  clEnqueueWriteBufferRect_noused
#define  clEnqueueFillBuffer  clEnqueueFillBuffer_noused
#define  clEnqueueCopyBuffer  clEnqueueCopyBuffer_noused
#define  clEnqueueCopyBufferRect  clEnqueueCopyBufferRect_noused
#define  clEnqueueReadImage  clEnqueueReadImage_noused
#define  clEnqueueWriteImage  clEnqueueWriteImage_noused
#define  clEnqueueFillImage  clEnqueueFillImage_noused
#define  clEnqueueCopyImage  clEnqueueCopyImage_noused
#define  clEnqueueCopyImageToBuffer  clEnqueueCopyImageToBuffer_noused
#define  clEnqueueCopyBufferToImage  clEnqueueCopyBufferToImage_noused
#define  clEnqueueMapBuffer  clEnqueueMapBuffer_noused
#define  clEnqueueMapImage  clEnqueueMapImage_noused
#define  clEnqueueUnmapMemObject  clEnqueueUnmapMemObject_noused
#define  clEnqueueMigrateMemObjects  clEnqueueMigrateMemObjects_noused
#define  clEnqueueNDRangeKernel  clEnqueueNDRangeKernel_noused
#define  clEnqueueNativeKernel  clEnqueueNativeKernel_noused
#define  clEnqueueMarkerWithWaitList  clEnqueueMarkerWithWaitList_noused
#define  clEnqueueBarrierWithWaitList  clEnqueueBarrierWithWaitList_noused
#define  clEnqueueSVMFree  clEnqueueSVMFree_noused
#define  clEnqueueSVMMemcpy  clEnqueueSVMMemcpy_noused
#define  clEnqueueSVMMemFill  clEnqueueSVMMemFill_noused
#define  clEnqueueSVMMap  clEnqueueSVMMap_noused
#define  clEnqueueSVMUnmap  clEnqueueSVMUnmap_noused
#define  clEnqueueSVMMigrateMem  clEnqueueSVMMigrateMem_noused
#define  clGetExtensionFunctionAddressForPlatform  clGetExtensionFunctionAddressForPlatform_noused
#define  clCreateImage2D  clCreateImage2D_noused
#define  clCreateImage3D  clCreateImage3D_noused
#define  clEnqueueMarker  clEnqueueMarker_noused
#define  clEnqueueWaitForEvents  clEnqueueWaitForEvents_noused
#define  clEnqueueBarrier  clEnqueueBarrier_noused
#define  clUnloadCompiler  clUnloadCompiler_noused
#define  clGetExtensionFunctionAddress  clGetExtensionFunctionAddress_noused
#define  clCreateCommandQueue  clCreateCommandQueue_noused
#define  clCreateSampler  clCreateSampler_noused
#define  clEnqueueTask  clEnqueueTask_noused

#include <CL/cl.h>

#define  clGetPlatformIDs  clGetPlatformIDs_redef
#define  clGetPlatformInfo  clGetPlatformInfo_redef
#define  clGetDeviceIDs  clGetDeviceIDs_redef
#define  clGetDeviceInfo  clGetDeviceInfo_redef
#define  clCreateSubDevices  clCreateSubDevices_redef
#define  clRetainDevice  clRetainDevice_redef
#define  clReleaseDevice  clReleaseDevice_redef
#define  clSetDefaultDeviceCommandQueue  clSetDefaultDeviceCommandQueue_redef
#define  clGetDeviceAndHostTimer  clGetDeviceAndHostTimer_redef
#define  clGetHostTimer  clGetHostTimer_redef
#define  clCreateContext  clCreateContext_redef
#define  clCreateContextFromType  clCreateContextFromType_redef
#define  clRetainContext  clRetainContext_redef
#define  clReleaseContext  clReleaseContext_redef
#define  clGetContextInfo  clGetContextInfo_redef
#define  clCreateCommandQueueWithProperties  clCreateCommandQueueWithProperties_redef
#define  clRetainCommandQueue  clRetainCommandQueue_redef
#define  clReleaseCommandQueue  clReleaseCommandQueue_redef
#define  clGetCommandQueueInfo  clGetCommandQueueInfo_redef
#define  clCreateBuffer  clCreateBuffer_redef
#define  clCreateSubBuffer  clCreateSubBuffer_redef
#define  clCreateImage  clCreateImage_redef
#define  clCreatePipe  clCreatePipe_redef
#define  clRetainMemObject  clRetainMemObject_redef
#define  clReleaseMemObject  clReleaseMemObject_redef
#define  clGetSupportedImageFormats  clGetSupportedImageFormats_redef
#define  clGetMemObjectInfo  clGetMemObjectInfo_redef
#define  clGetImageInfo  clGetImageInfo_redef
#define  clGetPipeInfo  clGetPipeInfo_redef
#define  clSetMemObjectDestructorCallback  clSetMemObjectDestructorCallback_redef
#define  clSVMAlloc  clSVMAlloc_redef
#define  clSVMFree  clSVMFree_redef
#define  clCreateSamplerWithProperties  clCreateSamplerWithProperties_redef
#define  clRetainSampler  clRetainSampler_redef
#define  clReleaseSampler  clReleaseSampler_redef
#define  clGetSamplerInfo  clGetSamplerInfo_redef
#define  clCreateProgramWithSource  clCreateProgramWithSource_redef
#define  clCreateProgramWithBinary  clCreateProgramWithBinary_redef
#define  clCreateProgramWithBuiltInKernels  clCreateProgramWithBuiltInKernels_redef
#define  clCreateProgramWithIL  clCreateProgramWithIL_redef
#define  clRetainProgram  clRetainProgram_redef
#define  clReleaseProgram  clReleaseProgram_redef
#define  clBuildProgram  clBuildProgram_redef
#define  clCompileProgram  clCompileProgram_redef
#define  clLinkProgram  clLinkProgram_redef
#define  clUnloadPlatformCompiler  clUnloadPlatformCompiler_redef
#define  clGetProgramInfo  clGetProgramInfo_redef
#define  clGetProgramBuildInfo  clGetProgramBuildInfo_redef
#define  clCreateKernel  clCreateKernel_redef
#define  clCreateKernelsInProgram  clCreateKernelsInProgram_redef
#define  clCloneKernel  clCloneKernel_redef
#define  clRetainKernel  clRetainKernel_redef
#define  clReleaseKernel  clReleaseKernel_redef
#define  clSetKernelArg  clSetKernelArg_redef
#define  clSetKernelArgSVMPointer  clSetKernelArgSVMPointer_redef
#define  clSetKernelExecInfo  clSetKernelExecInfo_redef
#define  clGetKernelInfo  clGetKernelInfo_redef
#define  clGetKernelArgInfo  clGetKernelArgInfo_redef
#define  clGetKernelWorkGroupInfo  clGetKernelWorkGroupInfo_redef
#define  clGetKernelSubGroupInfo  clGetKernelSubGroupInfo_redef
#define  clWaitForEvents  clWaitForEvents_redef
#define  clGetEventInfo  clGetEventInfo_redef
#define  clCreateUserEvent  clCreateUserEvent_redef
#define  clRetainEvent  clRetainEvent_redef
#define  clReleaseEvent  clReleaseEvent_redef
#define  clSetUserEventStatus  clSetUserEventStatus_redef
#define  clSetEventCallback  clSetEventCallback_redef
#define  clGetEventProfilingInfo  clGetEventProfilingInfo_redef
#define  clFlush  clFlush_redef
#define  clFinish  clFinish_redef
#define  clEnqueueReadBuffer  clEnqueueReadBuffer_redef
#define  clEnqueueReadBufferRect  clEnqueueReadBufferRect_redef
#define  clEnqueueWriteBuffer  clEnqueueWriteBuffer_redef
#define  clEnqueueWriteBufferRect  clEnqueueWriteBufferRect_redef
#define  clEnqueueFillBuffer  clEnqueueFillBuffer_redef
#define  clEnqueueCopyBuffer  clEnqueueCopyBuffer_redef
#define  clEnqueueCopyBufferRect  clEnqueueCopyBufferRect_redef
#define  clEnqueueReadImage  clEnqueueReadImage_redef
#define  clEnqueueWriteImage  clEnqueueWriteImage_redef
#define  clEnqueueFillImage  clEnqueueFillImage_redef
#define  clEnqueueCopyImage  clEnqueueCopyImage_redef
#define  clEnqueueCopyImageToBuffer  clEnqueueCopyImageToBuffer_redef
#define  clEnqueueCopyBufferToImage  clEnqueueCopyBufferToImage_redef
#define  clEnqueueMapBuffer  clEnqueueMapBuffer_redef
#define  clEnqueueMapImage  clEnqueueMapImage_redef
#define  clEnqueueUnmapMemObject  clEnqueueUnmapMemObject_redef
#define  clEnqueueMigrateMemObjects  clEnqueueMigrateMemObjects_redef
#define  clEnqueueNDRangeKernel  clEnqueueNDRangeKernel_redef
#define  clEnqueueNativeKernel  clEnqueueNativeKernel_redef
#define  clEnqueueMarkerWithWaitList  clEnqueueMarkerWithWaitList_redef
#define  clEnqueueBarrierWithWaitList  clEnqueueBarrierWithWaitList_redef
#define  clEnqueueSVMFree  clEnqueueSVMFree_redef
#define  clEnqueueSVMMemcpy  clEnqueueSVMMemcpy_redef
#define  clEnqueueSVMMemFill  clEnqueueSVMMemFill_redef
#define  clEnqueueSVMMap  clEnqueueSVMMap_redef
#define  clEnqueueSVMUnmap  clEnqueueSVMUnmap_redef
#define  clEnqueueSVMMigrateMem  clEnqueueSVMMigrateMem_redef
#define  clGetExtensionFunctionAddressForPlatform  clGetExtensionFunctionAddressForPlatform_redef
#define  clCreateImage2D  clCreateImage2D_redef
#define  clCreateImage3D  clCreateImage3D_redef
#define  clEnqueueMarker  clEnqueueMarker_redef
#define  clEnqueueWaitForEvents  clEnqueueWaitForEvents_redef
#define  clEnqueueBarrier  clEnqueueBarrier_redef
#define  clUnloadCompiler  clUnloadCompiler_redef
#define  clGetExtensionFunctionAddress  clGetExtensionFunctionAddress_redef
#define  clCreateCommandQueue  clCreateCommandQueue_redef
#define  clCreateSampler  clCreateSampler_redef
#define  clEnqueueTask  clEnqueueTask_redef

#ifdef __cplusplus
extern "C" {
#endif

extern ACV_EXPORTS  cl_int CL_API_CALL  clGetPlatformIDs(cl_uint, cl_platform_id *, cl_uint *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetPlatformInfo(cl_platform_id, cl_platform_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetDeviceIDs(cl_platform_id, cl_device_type, cl_uint, cl_device_id *, cl_uint *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetDeviceInfo(cl_device_id, cl_device_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clCreateSubDevices(cl_device_id, const cl_device_partition_property *, cl_uint, cl_device_id *, cl_uint *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainDevice(cl_device_id);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseDevice(cl_device_id);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetDefaultDeviceCommandQueue(cl_context, cl_device_id, cl_command_queue);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetDeviceAndHostTimer(cl_device_id, cl_ulong*, cl_ulong*);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetHostTimer(cl_device_id, cl_ulong *);
extern ACV_EXPORTS  cl_context CL_API_CALL  clCreateContext(const cl_context_properties *, cl_uint, const cl_device_id *,  void  (CL_CALLBACK * )(const char *,  const void *,  size_t,  void *), void *, cl_int *);
extern ACV_EXPORTS  cl_context CL_API_CALL  clCreateContextFromType(const cl_context_properties *, cl_device_type,  void  (CL_CALLBACK *  )(const char *,  const void *,  size_t,  void *), void *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainContext(cl_context);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseContext(cl_context);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetContextInfo(cl_context, cl_context_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_command_queue CL_API_CALL  clCreateCommandQueueWithProperties(cl_context, cl_device_id, const cl_queue_properties *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainCommandQueue(cl_command_queue);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseCommandQueue(cl_command_queue);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetCommandQueueInfo(cl_command_queue, cl_command_queue_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_mem CL_API_CALL  clCreateBuffer(cl_context, cl_mem_flags, size_t, void *, cl_int *);
extern ACV_EXPORTS  cl_mem CL_API_CALL  clCreateSubBuffer(cl_mem, cl_mem_flags, cl_buffer_create_type, const void *, cl_int *);
extern ACV_EXPORTS  cl_mem CL_API_CALL  clCreateImage(cl_context, cl_mem_flags, const cl_image_format *, const cl_image_desc *, void *, cl_int *);
extern ACV_EXPORTS  cl_mem CL_API_CALL  clCreatePipe(cl_context, cl_mem_flags, cl_uint, cl_uint, const cl_pipe_properties *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainMemObject(cl_mem);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseMemObject(cl_mem);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetSupportedImageFormats(cl_context, cl_mem_flags, cl_mem_object_type, cl_uint, cl_image_format *, cl_uint *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetMemObjectInfo(cl_mem, cl_mem_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetImageInfo(cl_mem, cl_image_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetPipeInfo(cl_mem, cl_pipe_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetMemObjectDestructorCallback(cl_mem,  void  (CL_CALLBACK * )( cl_mem ,  void* ), void *);
extern ACV_EXPORTS  void * CL_API_CALL  clSVMAlloc(cl_context, cl_svm_mem_flags, size_t, cl_uint);
extern ACV_EXPORTS  void CL_API_CALL  clSVMFree(cl_context, void *);
extern ACV_EXPORTS  cl_sampler CL_API_CALL  clCreateSamplerWithProperties(cl_context, const cl_sampler_properties *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainSampler(cl_sampler);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseSampler(cl_sampler);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetSamplerInfo(cl_sampler, cl_sampler_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_program CL_API_CALL  clCreateProgramWithSource(cl_context, cl_uint, const char **, const size_t *, cl_int *);
extern ACV_EXPORTS  cl_program CL_API_CALL  clCreateProgramWithBinary(cl_context, cl_uint, const cl_device_id *, const size_t *, const unsigned char **, cl_int *, cl_int *);
extern ACV_EXPORTS  cl_program CL_API_CALL  clCreateProgramWithBuiltInKernels(cl_context, cl_uint, const cl_device_id *, const char *, cl_int *);
extern ACV_EXPORTS  cl_program CL_API_CALL  clCreateProgramWithIL(cl_context, const void*, size_t, cl_int*);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainProgram(cl_program);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseProgram(cl_program);
extern ACV_EXPORTS  cl_int CL_API_CALL  clBuildProgram(cl_program, cl_uint, const cl_device_id *, const char *,  void  (CL_CALLBACK * )(cl_program ,  void * ), void *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clCompileProgram(cl_program, cl_uint, const cl_device_id *, const char *, cl_uint, const cl_program *, const char **,  void  (CL_CALLBACK * )(cl_program ,  void * ), void *);
extern ACV_EXPORTS  cl_program CL_API_CALL  clLinkProgram(cl_context, cl_uint, const cl_device_id *, const char *, cl_uint, const cl_program *,  void  (CL_CALLBACK * )(cl_program ,  void * ), void *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clUnloadPlatformCompiler(cl_platform_id);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetProgramInfo(cl_program, cl_program_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetProgramBuildInfo(cl_program, cl_device_id, cl_program_build_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_kernel CL_API_CALL  clCreateKernel(cl_program, const char *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clCreateKernelsInProgram(cl_program, cl_uint, cl_kernel *, cl_uint *);
extern ACV_EXPORTS  cl_kernel CL_API_CALL  clCloneKernel(cl_kernel, cl_int*);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainKernel(cl_kernel);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseKernel(cl_kernel);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetKernelArg(cl_kernel, cl_uint, size_t, const void *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetKernelArgSVMPointer(cl_kernel, cl_uint, const void *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetKernelExecInfo(cl_kernel, cl_kernel_exec_info, size_t, const void *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetKernelInfo(cl_kernel, cl_kernel_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetKernelArgInfo(cl_kernel, cl_uint, cl_kernel_arg_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetKernelWorkGroupInfo(cl_kernel, cl_device_id, cl_kernel_work_group_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetKernelSubGroupInfo(cl_kernel, cl_device_id, cl_kernel_sub_group_info, size_t, const void*, size_t, void*, size_t*);
extern ACV_EXPORTS  cl_int CL_API_CALL  clWaitForEvents(cl_uint, const cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetEventInfo(cl_event, cl_event_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_event CL_API_CALL  clCreateUserEvent(cl_context, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clRetainEvent(cl_event);
extern ACV_EXPORTS  cl_int CL_API_CALL  clReleaseEvent(cl_event);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetUserEventStatus(cl_event, cl_int);
extern ACV_EXPORTS  cl_int CL_API_CALL  clSetEventCallback(cl_event, cl_int,  void  (CL_CALLBACK * )(cl_event,  cl_int,  void *), void *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clGetEventProfilingInfo(cl_event, cl_profiling_info, size_t, void *, size_t *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clFlush(cl_command_queue);
extern ACV_EXPORTS  cl_int CL_API_CALL  clFinish(cl_command_queue);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueReadBuffer(cl_command_queue, cl_mem, cl_bool, size_t, size_t, void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueReadBufferRect(cl_command_queue, cl_mem, cl_bool, const size_t *, const size_t *, const size_t *, size_t, size_t, size_t, size_t, void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueWriteBuffer(cl_command_queue, cl_mem, cl_bool, size_t, size_t, const void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueWriteBufferRect(cl_command_queue, cl_mem, cl_bool, const size_t *, const size_t *, const size_t *, size_t, size_t, size_t, size_t, const void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueFillBuffer(cl_command_queue, cl_mem, const void *, size_t, size_t, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueCopyBuffer(cl_command_queue, cl_mem, cl_mem, size_t, size_t, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueCopyBufferRect(cl_command_queue, cl_mem, cl_mem, const size_t *, const size_t *, const size_t *, size_t, size_t, size_t, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueReadImage(cl_command_queue, cl_mem, cl_bool, const size_t *, const size_t *, size_t, size_t, void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueWriteImage(cl_command_queue, cl_mem, cl_bool, const size_t *, const size_t *, size_t, size_t, const void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueFillImage(cl_command_queue, cl_mem, const void *, const size_t *, const size_t *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueCopyImage(cl_command_queue, cl_mem, cl_mem, const size_t *, const size_t *, const size_t *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueCopyImageToBuffer(cl_command_queue, cl_mem, cl_mem, const size_t *, const size_t *, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueCopyBufferToImage(cl_command_queue, cl_mem, cl_mem, size_t, const size_t *, const size_t *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  void * CL_API_CALL  clEnqueueMapBuffer(cl_command_queue, cl_mem, cl_bool, cl_map_flags, size_t, size_t, cl_uint, const cl_event *, cl_event *, cl_int *);
extern ACV_EXPORTS  void * CL_API_CALL  clEnqueueMapImage(cl_command_queue, cl_mem, cl_bool, cl_map_flags, const size_t *, const size_t *, size_t *, size_t *, cl_uint, const cl_event *, cl_event *, cl_int *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueUnmapMemObject(cl_command_queue, cl_mem, void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueMigrateMemObjects(cl_command_queue, cl_uint, const cl_mem *, cl_mem_migration_flags, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueNDRangeKernel(cl_command_queue, cl_kernel, cl_uint, const size_t *, const size_t *, const size_t *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueNativeKernel(cl_command_queue,  void  (CL_CALLBACK * )(void *), void *, size_t, cl_uint, const cl_mem *, const void **, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueMarkerWithWaitList(cl_command_queue, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueBarrierWithWaitList(cl_command_queue, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueSVMFree(cl_command_queue, cl_uint, void *[],  void  (CL_CALLBACK * )(cl_command_queue ,  cl_uint ,  void *[] ,  void * ), void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueSVMMemcpy(cl_command_queue, cl_bool, void *, const void *, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueSVMMemFill(cl_command_queue, void *, const void *, size_t, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueSVMMap(cl_command_queue, cl_bool, cl_map_flags, void *, size_t, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueSVMUnmap(cl_command_queue, void *, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  cl_int CL_API_CALL  clEnqueueSVMMigrateMem(cl_command_queue, cl_uint, const void **, const size_t *, cl_mem_migration_flags, cl_uint, const cl_event *, cl_event *);
extern ACV_EXPORTS  void * CL_API_CALL  clGetExtensionFunctionAddressForPlatform(cl_platform_id, const char *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED cl_mem CL_API_CALL  clCreateImage2D(cl_context, cl_mem_flags, const cl_image_format *, size_t, size_t, size_t, void *, cl_int *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED cl_mem CL_API_CALL  clCreateImage3D(cl_context, cl_mem_flags, const cl_image_format *, size_t, size_t, size_t, size_t, size_t, void *, cl_int *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED cl_int CL_API_CALL  clEnqueueMarker(cl_command_queue, cl_event *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED cl_int CL_API_CALL  clEnqueueWaitForEvents(cl_command_queue, cl_uint, const cl_event *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED cl_int CL_API_CALL  clEnqueueBarrier(cl_command_queue);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED cl_int CL_API_CALL  clUnloadCompiler();
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_1_DEPRECATED void * CL_API_CALL  clGetExtensionFunctionAddress(const char *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_2_DEPRECATED cl_command_queue CL_API_CALL  clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_2_DEPRECATED cl_sampler CL_API_CALL  clCreateSampler(cl_context, cl_bool, cl_addressing_mode, cl_filter_mode, cl_int *);
extern ACV_EXPORTS CL_EXT_PREFIX__VERSION_1_2_DEPRECATED cl_int CL_API_CALL  clEnqueueTask(cl_command_queue, cl_kernel, cl_uint, const cl_event *, cl_event *);

#ifdef __cplusplus
}
#endif
